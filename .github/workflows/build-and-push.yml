name: Deploy to S3 and Invalidate Cache

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    env:
      BUCKET_NAME: e1g13frontend
      REGION: us-east-2
      DIST_ID: E73LQEDSM3Z4U

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Crear auth_config.json en el proyecto
        run: |
          cat <<EOL > src/auth_config.json
          {
            "domain": "dev-e36pqbtayc7ny77l.us.auth0.com",
            "clientId": "hVIzZHjzYH9yjVhYdEskCuwi2awvxNHg",
            "audience": "https://dev-e36pqbtayc7ny77l.us.auth0.com/api/v2/"
          }
          EOL

      - name: Build Frontend with npm
        run: npm run build

      - name: Deploy changes to S3
        run: aws s3 sync build/ s3://${{ env.BUCKET_NAME }} --delete

      - name: Create CloudFront Invalidation
        id: create_invalidation
        run: |
          verificationId=$(aws cloudfront create-invalidation --distribution-id ${{ env.DIST_ID }} --paths "/*" | jq -r '.Invalidation.Id')
          echo "verificationId=$verificationId" >> $GITHUB_OUTPUT

      - name: Cache Invalidation Verification
        run: aws cloudfront get-invalidation --id ${{ steps.create_invalidation.outputs.verificationId }} --distribution-id ${{ env.DIST_ID }}
         
